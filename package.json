{
    "name": "kotonone",
    "version": "0.1.0",
    "private": true,
    "scripts": {
        "dev": "next dev --turbopack",
        "build": "next build",
        "start": "next start",
        "lint": "next lint",
        "lint:fix": "next lint --fix",
        "lint:js": "eslint 'src/**/*.js' --fix",
        "lint:format": "prettier --write 'src/**/*.js'",
        "typecheck": "tsc --noEmit",
        "test": "echo \"Warning: No tests specified\" && exit 0",
        "test:unit": "echo \"Warning: No unit tests specified\" && exit 0",
        "test:e2e": "echo \"Warning: No E2E tests specified\" && exit 0",
        "test:watch": "echo \"Warning: No tests specified\" && exit 0",
        "test:coverage": "echo \"Warning: No coverage tests specified\" && exit 0",
        "security:audit": "npm audit --audit-level=moderate",
        "security:deps": "npm audit --production",
        "security:fix": "npm audit fix",
        "security:js": "eslint 'src/**/*.js' --no-eslintrc --config .eslintrc.security.js || echo 'Security ESLint config not found'",
        "reviewdog:eslint": "eslint 'src/**/*.js' --format checkstyle",
        "reviewdog:format": "eslint 'src/**/*.js' --format json",
        "build:production": "NODE_ENV=production next build",
        "build:preview": "NODE_ENV=preview next build",
        "build:analyze": "ANALYZE=true next build",
        "analyze": "npm run build:analyze",
        "ci:setup": "npm ci",
        "ci:lint": "npm run lint",
        "ci:lint:js": "npm run lint:js",
        "ci:test": "npm run test:unit && npm run test:e2e",
        "ci:security": "npm run security:audit && npm run security:deps",
        "ci:build": "npm run build:production",
        "ci:all": "npm run ci:lint && npm run ci:test && npm run ci:security && npm run ci:build",
        "jsdoc:generate": "jsdoc src/**/*.js -d docs/jsdoc -c jsdoc.conf.json || echo 'JSDoc完了（一部エラーあり）'",
        "jsdoc:watch": "jsdoc src/**/*.js -d docs/jsdoc -c jsdoc.conf.json --watch",
        "lint:jsdoc": "eslint src/**/*.js --rule 'require-jsdoc:error'",
        "lint:console": "eslint src/**/*.js --rule 'no-console:error'",
        "marp": "marp doc/02_requirements_definition/rdd.md --pdf -o doc/99_slide_pdf/rdd-slides.pdf",
        "marp:html": "marp doc/02_requirements_definition/rdd.md -o doc/99_slide_pdf/rdd-slides.html",
        "marp:pptx": "marp doc/02_requirements_definition/rdd.md --pptx -o doc/99_slide_pdf/rdd-slides.pptx",
        "slides": "npm run marp",
        "docs:pdf:task": "node scripts/md-to-pdf.js doc/00_task/todo.md doc/99_slide_pdf/task/todo-a4.pdf",
        "docs:pdf:architecture": "find doc/03_architecture -name '*.md' -exec sh -c 'mkdir -p doc/99_slide_pdf/architecture && node scripts/md-to-pdf.js \"$1\" \"doc/99_slide_pdf/architecture/$(basename \"$1\" .md)-a4.pdf\"' sh {} \\; || echo 'アーキテクチャドキュメント未作成'",
        "docs:pdf:uml": "find doc/04_uml -name '*.md' -exec sh -c 'mkdir -p doc/99_slide_pdf/uml && node scripts/md-to-pdf.js \"$1\" \"doc/99_slide_pdf/uml/$(basename \"$1\" .md)-a4.pdf\"' sh {} \\; || echo 'UMLドキュメント未作成'",
        "docs:pdf:api": "find doc/05_api_design -name '*.md' -exec sh -c 'mkdir -p doc/99_slide_pdf/api && node scripts/md-to-pdf.js \"$1\" \"doc/99_slide_pdf/api/$(basename \"$1\" .md)-a4.pdf\"' sh {} \\; || echo 'API設計ドキュメント未作成'",
        "docs:pdf:design": "find doc/06_design_document -name '*.md' -exec sh -c 'mkdir -p doc/99_slide_pdf/design && node scripts/md-to-pdf.js \"$1\" \"doc/99_slide_pdf/design/$(basename \"$1\" .md)-a4.pdf\"' sh {} \\; || echo '設計ドキュメント処理中'",
        "docs:pdf:test": "find doc/08_test_case -name '*.md' -exec sh -c 'mkdir -p doc/99_slide_pdf/test && node scripts/md-to-pdf.js \"$1\" \"doc/99_slide_pdf/test/$(basename \"$1\" .md)-a4.pdf\"' sh {} \\; || echo 'テストケースドキュメント未作成'",
        "docs:pdf:all": "npm run docs:pdf:task && npm run docs:pdf:architecture && npm run docs:pdf:uml && npm run docs:pdf:api && npm run docs:pdf:design && npm run docs:pdf:test",
        "docs:generate:all": "npm run jsdoc:generate && npm run docs:pdf:all && npm run marp",
        "docs:full": "echo 'ドキュメント生成開始...' && npm run docs:generate:all && echo 'ドキュメント生成完了 📚'",
        "docs:a4:single": "node scripts/md-to-pdf.js",
        "docs:help": "echo '📚 ドキュメント生成スクリプト' && echo '' && echo '🚀 クイックコマンド:' && echo '  npm run docs:full     # 全ドキュメント一括生成' && echo '  npm run docs:pdf:all  # 全MDをA4 PDF化' && echo '  npm run docs:a4:single # 単体MDをA4 PDF化' && echo '  npm run jsdoc:generate # JSDoc生成' && echo '  npm run marp          # RDDスライド生成' && echo '' && echo '📋 詳細は doc/README-docs-scripts.md を参照'",
        "docs:clean": "rm -rf doc/99_slide_pdf/*.pdf doc/99_slide_pdf/*/*.pdf docs/jsdoc && echo 'ドキュメント削除完了 🗑️'",
        "firebase:emulators": "firebase emulators:start",
        "firebase:emulators:only": "firebase emulators:start --only functions,firestore",
        "firebase:functions:shell": "firebase functions:shell",
        "firebase:functions:serve": "cd functions && npm run serve",
        "firebase:functions:deploy": "cd functions && npm run deploy",
        "firebase:functions:logs": "cd functions && npm run logs",
        "firebase:functions:install": "cd functions && npm ci",
        "firebase:functions:lint": "cd functions && npm run lint",
        "firebase:functions:lint:fix": "cd functions && npm run lint:fix",
        "firebase:setup": "firebase login && firebase use --add",
        "firebase:config": "firebase functions:config:get > functions/.runtimeconfig.json",
        "firebase:init": "firebase init functions firestore",
        "firebase:deploy:all": "firebase deploy",
        "firebase:deploy:rules": "firebase deploy --only firestore:rules",
        "firebase:deploy:indexes": "firebase deploy --only firestore:indexes",
        "firebase:health": "curl -X GET https://asia-northeast1-kotonone-app.cloudfunctions.net/healthCheck",
        "functions:test": "cd functions && npm test",
        "functions:install": "npm run firebase:functions:install",
        "functions:dev": "npm run firebase:functions:serve",
        "functions:deploy": "npm run firebase:functions:deploy",
        "functions:logs": "npm run firebase:functions:logs"
    },
    "dependencies": {
        "firebase": "^11.10.0",
        "nanoid": "^5.1.5",
        "next": "15.3.5",
        "openai": "^5.9.0",
        "p5": "^2.0.3",
        "react": "^19.0.0",
        "react-dom": "^19.0.0"
    },
    "devDependencies": {
        "@marp-team/marp-cli": "^4.1.0",
        "@tailwindcss/postcss": "^4",
        "eslint": "^9.17.0",
        "eslint-config-next": "15.3.5",
        "firebase-tools": "^13.27.0",
        "jsdoc": "^4.0.4",
        "marked": "^16.0.0",
        "mermaid": "^11.8.1",
        "prettier": "^3.3.3",
        "puppeteer": "^24.12.1",
        "tailwindcss": "^4",
        "typescript": "^5.7.3"
    },
    "optionalDependencies": {
        "@types/node": "^22.10.6"
    }
}
